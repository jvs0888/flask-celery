from pathlib import Path
from celery import Celery
from celery.contrib.abortable import AbortableTask

try:
    from loggers.logger import logger
    from settings.config import config
except ImportError as ie:
    exit(f'{ie} :: {Path(__file__).resolve()}')


celery: Celery = Celery()
celery.config_from_object(config.celery['app'])

services: dict = {
  # your services Class(is_aborted: AbortableTask)
}


@celery.task(base=AbortableTask, **config.celery['task'])
def worker(self, service: str):
    try:
        scraper = services[service](is_aborted=self.is_aborted)
        scraper.run()
    except Exception as e:
        logger.exception(e)
